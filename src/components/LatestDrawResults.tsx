import React from 'react'
import { Link } from 'react-router-dom'
import { Trophy, Calendar, Users, ExternalLink } from 'lucide-react'
import { useLatestDraw } from '../hooks/useDrawResults'

const LatestDrawResults: React.FC = () => {
  const { latestDraw, isLoading } = useLatestDraw()

  if (isLoading) {
    return (
      <div className="bg-white rounded-xl shadow-lg p-8 ghost-glow">
        <div className="text-center">
          <div className="animate-spin w-8 h-8 border-4 border-cyan-500 border-t-transparent rounded-full mx-auto mb-4"></div>
          <p className="text-gray-600">Loading latest draw results...</p>
        </div>
      </div>
    )
  }

  if (!latestDraw) {
    return (
      <div className="bg-white rounded-xl shadow-lg p-8 ghost-glow">
        <h2 className="text-3xl font-bold text-slate-900 mb-6 text-center">
          Latest Draw Results
        </h2>
        <div className="text-center py-8">
          <Trophy className="w-16 h-16 text-gray-400 mx-auto mb-4" />
          <h3 className="text-xl font-semibold text-slate-900 mb-2">
            No Draw Results Yet
          </h3>
          <p className="text-slate-600 mb-4">
            The first draw hasn't been executed yet. Check back after the next draw!
          </p>
          <Link
            to="/draw"
            className="kaspa-button inline-flex items-center space-x-2 px-6 py-3 text-white rounded-lg"
          >
            <span>Execute Draw</span>
            <ExternalLink className="w-4 h-4" />
          </Link>
        </div>
      </div>
    )
  }

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    })
  }

  return (
    <div className="bg-white rounded-xl shadow-lg p-8 ghost-glow">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-3xl font-bold text-slate-900">
          Latest Draw Results
        </h2>
        <Link
          to="/results"
          className="text-cyan-600 hover:text-cyan-800 font-semibold flex items-center space-x-1"
        >
          <span>View All Results</span>
          <ExternalLink className="w-4 h-4" />
        </Link>
      </div>

      {/* Draw Header */}
      <div className="bg-gradient-to-r from-cyan-500 to-blue-600 text-white p-6 rounded-xl mb-6">
        <div className="flex flex-col md:flex-row md:items-center md:justify-between">
          <div>
            <div className="flex items-center space-x-2 mb-2">
              <Calendar className="w-5 h-5" />
              <span className="text-lg font-semibold">
                {formatDate(latestDraw.date)}
              </span>
            </div>
            <div className="text-3xl font-bold">
              Jackpot: {parseFloat(latestDraw.jackpotAmount).toFixed(4)} KAS
            </div>
          </div>
          <div className="mt-4 md:mt-0 text-right">
            <div className="text-sm opacity-90">Draw #{latestDraw.id}</div>
            <div className="flex items-center space-x-2 mt-1">
              <Users className="w-4 h-4" />
              <span>{latestDraw.totalTickets.toLocaleString()} tickets sold</span>
            </div>
          </div>
        </div>
      </div>

      {/* Winning Numbers */}
      <div className="mb-6">
        <h3 className="text-xl font-semibold text-slate-900 mb-4">
          Winning Numbers
        </h3>
        <div className="flex flex-wrap gap-3 justify-center md:justify-start">
          {latestDraw.winningNumbers.length > 0 ? (
            latestDraw.winningNumbers.map((number, index) => (
              <div
                key={index}
                className="kaspa-winning-number w-12 h-12 rounded-full flex items-center justify-center text-lg font-bold shadow-lg"
              >
                {number}
              </div>
            ))
          ) : (
            <div className="text-center w-full py-4">
              <p className="text-slate-500">Winning numbers will appear here after draw execution</p>
            </div>
          )}
        </div>
        {latestDraw.winningNumbers.length > 0 && (
          <p className="text-sm text-cyan-600 mt-3">
            Generated by BlockDAG consensus algorithm
          </p>
        )}
      </div>

      {/* Prize Breakdown - Compact Version */}
      <div>
        <h3 className="text-xl font-semibold text-slate-900 mb-4">
          Prize Distribution
        </h3>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <div className="bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg p-4 text-white text-center">
            <div className="flex items-center justify-center space-x-1 mb-2">
              <Trophy className="w-4 h-4" />
              <span className="font-semibold text-sm">Jackpot</span>
            </div>
            <div className="text-xl font-bold mb-1">
              {latestDraw.winners.jackpot}
            </div>
            <div className="text-xs opacity-90">
              {latestDraw.winners.jackpot > 0 ? 'winner(s)' : 'No winners'}
            </div>
          </div>

          <div className="bg-gradient-to-r from-green-400 to-blue-500 rounded-lg p-4 text-white text-center">
            <div className="flex items-center justify-center space-x-1 mb-2">
              <span className="font-semibold text-sm">4 Match</span>
            </div>
            <div className="text-xl font-bold mb-1">
              {latestDraw.winners.second}
            </div>
            <div className="text-xs opacity-90">
              {latestDraw.winners.second > 0 ? 'winner(s)' : 'No winners'}
            </div>
          </div>

          <div className="bg-gradient-to-r from-purple-400 to-pink-500 rounded-lg p-4 text-white text-center">
            <div className="flex items-center justify-center space-x-1 mb-2">
              <span className="font-semibold text-sm">3 Match</span>
            </div>
            <div className="text-xl font-bold mb-1">
              {latestDraw.winners.third}
            </div>
            <div className="text-xs opacity-90">
              {latestDraw.winners.third > 0 ? 'winner(s)' : 'No winners'}
            </div>
          </div>

          <div className="bg-gradient-to-r from-cyan-400 to-teal-500 rounded-lg p-4 text-white text-center">
            <div className="flex items-center justify-center space-x-1 mb-2">
              <span className="font-semibold text-sm">2 Match</span>
            </div>
            <div className="text-xl font-bold mb-1">
              {latestDraw.winners.fourth}
            </div>
            <div className="text-xs opacity-90">
              {latestDraw.winners.fourth > 0 ? 'winner(s)' : 'No winners'}
            </div>
          </div>
        </div>
        <p className="text-sm text-cyan-600 mt-4 text-center">
          Prizes distributed via Kaspa's instant finality protocol
        </p>
      </div>
    </div>
  )
}

export default LatestDrawResults